version: 2.1

description: >
  Integrate Github CLI with your CircleCI CI/CD pipeline easily with the github orb.

display:
  home_url: https://cli.github.com/
  source_url: https://github.com/topmonks/circleci

orbs:
  jq: circleci/jq@2.2.0

commands:
  install:
    description: Installs latest Github CLI
    steps:
      - jq/install
      - run:
          name: Install Github CLI
          description: Gets latest realease version of Github CLI
          command: |
            LATEST_RELEASE=$(curl -s https://api.github.com/repos/cli/cli/releases/latest)
            VERSION=$(echo $LATEST_RELEASE | jq -r '.tag_name')
            DEB_URL=$(echo $LATEST_RELEASE | jq -r '.assets[].browser_download_url | select(. | contains("linux_amd64.deb"))')
            wget --quiet -O gh_latest.deb $DEB_URL
            sudo apt install ./gh_latest.deb

  merge_pr:
    description: Merges current Pull Request
    parameters:
      delete_branch:
        type: boolean
        description: Delete the local and remote branch after merge
        default: false
      merge:
        type: boolean
        description: Merge the commits with the base branch
        default: false
      rebase:
        type: boolean
        description: Rebase the commits onto the base branch
        default: false
      squash:
        type: boolean
        description: Squash the commits into one commit and merge it into the base branch
        default: false
    steps:
      - run:
          name: Merge PR
          command: gh pr merge $CI_PULL_REQUEST <<# parameters.delete_branch >>--delete-branch<</ parameters.delete_branch >> <<# parameters.merge >>--merge<</ parameters.merge >> <<# parameters.rebase >>--rebase<</ parameters.rebase >> <<# parameters.squash >>--squash<</ parameters.squash >>

  release:
    description: Create a new GitHub Release for a repository.
    parameters:
      tag:
        type: string
        description: >
          If a matching git tag does not yet exist, one will automatically get created from the latest state
          of the default branch. Use --target to override this.

          To create a release from an annotated git tag, first create one locally with git,
          push the tag to GitHub, then run this command.
      files:
        type: string
        description: A list of asset files
    steps:
      - run:
          name: Release
          command: gh release create << parameters.tag >> << parameters.files >>

examples:
  automerge_dependabot_prs:
    description: >
      Automerges successful build of Dependabot Pull Request
    usage:
      version: 2.1
      orbs:
        github: topmonks/github@1.1.0
      jobs:
        merge_pr:
          docker:
            - image: cimg/base:2020.01
          steps:
            - checkout
            - github/install
            - github/merge_pr:
                rebase: true
      workflows:
        ci:
          jobs:
            - merge_pr:
                # set GITHUB_TOKEN environment variable into this context
                # How to generate tokens? https://docs.github.com/en/github/authenticating-to-github/creating-a-personal-access-token
                # How to create contexts? https://circleci.com/docs/2.0/contexts/
                context: github-cli
                requires:
                  # here enumerate jobs that determine successful validation of PR
                  - build
                filters:
                  branches:
                    only: /dependabot\/.*/
